// @flow

import React from 'react';
import Pips from '../Pips/Pips';
import './ModImage.css';

function importImages(context) {
  let images = {};
  context.keys().forEach((item) => {
    images[item.replace('./', '')] = context(item)
  });

  return images;
}

const mod_images = importImages(require.context('./images', false, /\.png/));

class ModImage extends React.PureComponent {

  render() {
    const mod = this.props.mod;
    const modImageName = this.modImageName(mod);
    const modColor = this.modColor(mod);
    const extraClass = this.props.className ? ` ${this.props.className}` : '';

    return (
      <div className={`mod-image ${mod.slot} ${modColor} ${extraClass}`}>
        <Pips pips={mod.pips}/>
        <div className={'mod-slot-image'}>
          <img src={mod_images[modImageName + '.png']} alt={modImageName}/>
          {this.modSetImage(mod.set.name)}
          {this.modHighlight(mod.slot)}
          <div className={'mod-level ' + (15 === mod.level ? 'gold ' : 'gray ') + mod.slot}>{mod.level}</div>
        </div>
      </div>
    );
  }

  // TODO: Update mod images to include mod color as well
  modImageName(mod) {
    return `${mod.slot}`;
  }

  modColor(mod) {
    switch (mod.tier) {
      case 5:
        return 'gold';
      case 4:
        return 'purple';
      case 3:
        return 'blue';
      case 2:
        return 'green';
      default:
        return 'gray';
    }
  }

  modSetImage(set) {
    let path, viewbox;

    switch (set.toLowerCase()) {
      case 'critchance':
        path = [
          <path key={'boom'} className={'boom'}
                d="M 27.561 0.394 L 46.852 18.107 L 56.695 1.182 L 63.78 18.503 L 92.128 0 L 79.922 22.833 L 100.002 21.649 L 85.434 44.089 L 99.608 50.388 L 87.403 60.229 L 98.033 71.643 L 80.711 73.218 L 87.797 98.806 L 60.238 81.881 L 48.821 99.2 L 41.341 85.423 L 16.536 98.412 L 25.987 76.367 L 3.939 77.157 L 20.867 57.078 L 0.002 44.089 L 16.93 38.186 L 0.002 17.319 L 30.71 22.439 L 27.955 0.7879999999999999 L 27.561 0.394 Z"/>,
          <path key={'2x'} className={'2x'}
                d="M 53.891 70.858 C 53.694 70.858 53.553 70.791 53.472 70.661 C 53.388 70.513 53.388 70.341 53.472 70.144 L 60.691 56.079 C 60.772 55.963 60.772 55.85 60.691 55.734 L 53.472 41.644 C 53.438 41.578 53.422 41.479 53.422 41.346 C 53.422 41.083 53.578 40.953 53.891 40.953 L 57.192 40.953 C 57.552 40.953 57.791 41.083 57.907 41.346 L 63.057 51.892 C 63.088 51.958 63.145 51.99 63.228 51.99 C 63.31 51.99 63.366 51.958 63.401 51.892 L 68.55 41.346 C 68.663 41.083 68.902 40.953 69.264 40.953 L 72.566 40.953 C 72.763 40.953 72.901 41.019 72.985 41.15 C 73.066 41.28 73.066 41.445 72.985 41.644 L 65.766 55.734 C 65.732 55.85 65.732 55.963 65.766 56.079 L 72.985 70.144 C 73.034 70.225 73.059 70.324 73.059 70.439 C 73.059 70.718 72.894 70.858 72.566 70.858 L 69.264 70.858 C 68.902 70.858 68.663 70.718 68.55 70.439 L 63.401 59.872 C 63.366 59.791 63.31 59.749 63.228 59.749 C 63.145 59.749 63.088 59.791 63.057 59.872 L 57.907 70.439 C 57.791 70.718 57.552 70.858 57.192 70.858 Z M 31.304 70.858 C 30.909 70.858 30.712 70.661 30.712 70.267 L 30.712 67.606 C 30.712 67.294 30.794 67.04 30.959 66.843 C 32.172 64.903 32.863 63.796 33.028 63.518 C 36.495 58.05 39.229 53.598 41.232 50.166 C 43.763 45.831 45.027 42.242 45.027 39.402 C 45.027 37.349 44.551 35.714 43.597 34.501 C 42.661 33.285 41.422 32.677 39.877 32.677 C 38.382 32.677 37.167 33.275 36.232 34.474 C 35.312 35.675 34.869 37.258 34.901 39.23 L 34.901 41.47 C 34.901 41.866 34.704 42.063 34.309 42.063 L 31.254 42.063 C 30.86 42.063 30.663 41.866 30.663 41.47 L 30.663 39.106 C 30.73 36.069 31.624 33.63 33.347 31.791 C 35.057 29.935 37.289 29.007 40.05 29.007 C 42.809 29.007 45.034 29.959 46.726 31.865 C 48.434 33.785 49.289 36.298 49.289 39.402 C 49.289 43.114 47.884 47.291 45.076 51.941 C 42.826 55.717 40.697 59.183 38.695 62.336 C 38.333 62.927 37.932 63.609 37.488 64.379 C 37.027 65.152 36.502 65.989 35.911 66.892 C 35.879 66.974 35.879 67.047 35.911 67.114 C 35.96 67.163 36.017 67.188 36.083 67.188 L 49.88 67.188 C 50.274 67.188 50.471 67.385 50.471 67.778 L 50.471 70.267 C 50.471 70.661 50.274 70.858 49.88 70.858 Z"/>
        ];
        viewbox = '-6 -4 114 116';
        break;
      case 'critdamage':
        path = [
          <path key={'boom'} className={'boom'}
                d="M 27.559 0.394 L 46.85 18.111 L 56.693 1.183 L 63.778 18.505 L 92.126 0 L 79.921 22.836 L 100 21.654 L 85.432 44.096 L 99.606 50.395 L 87.401 60.238 L 98.031 71.655 L 80.709 73.229 L 87.795 98.82 L 60.236 81.892 L 48.819 99.214 L 41.339 85.434 L 16.534 98.426 L 25.985 76.378 L 3.9370000000000003 77.166 L 20.865 57.087 L 0 44.096 L 16.928 38.19 L 0 17.322 L 30.708 22.442 L 27.953 0.7879999999999999 L 27.559 0.394 Z"/>,
          <path key={'bang'} className={'bang'}
                d="M 47.244 24.408 L 59.45 24.408 L 58.661 60.236 L 48.427 60.236 Z M 49.999 68.898 L 57.084 68.898 C 58.171 68.898 59.053 69.78 59.053 70.866 L 59.053 75.984 C 59.053 77.07 58.171 77.952 57.084 77.952 L 49.999 77.952 C 48.912 77.952 48.03 77.07 48.03 75.984 L 48.03 70.866 C 48.03 69.78 48.912 68.898 49.999 68.898 Z"/>
        ];
        viewbox = '-6 -4 114 116';
        break;
      case 'defense':
        path = <path
          d="M 50.686 100.001 C 50.686 100.001 94.455 82.299 92.578 22.977 C 51.453 -0.844 50.686 0.004 50.686 0.004 C 50.686 0.004 50.139 -0.17 7.447 24.327 C 7.073 24.223 7.898 81.984 50.686 100.001 Z"/>;
        viewbox = '-17 -10 128 135';
        break;
      case 'health':
        path = <path
          d="M 32.398 0.8 L 54.401 0.8 C 56.168 0.8 57.6 2.232 57.6 3.999 L 57.6 42.002 L 60.786 42.002 L 72 30.259 L 72 21.203 C 72 19.656 73.254 18.402 74.801 18.402 L 86.799 18.402 C 88.345 18.402 89.6 19.656 89.6 21.203 L 89.6 32.402 C 89.6 33.949 88.345 35.203 86.799 35.203 L 75.287 35.203 L 65.199 45.764 L 65.199 47.201 L 97.6 47.201 C 98.926 47.201 100 48.274 100 49.601 L 100 58.4 C 100 59.726 98.926 60.8 97.6 60.8 L 75.617 60.8 L 75.617 88.405 L 57.6 99.201 L 57.6 64.002 L 51.642 64.002 L 34.398 82.057 L 34.398 93.203 C 34.398 94.087 33.682 94.803 32.799 94.803 L 19.597 94.803 C 18.713 94.803 17.998 94.087 17.998 93.203 L 17.998 79.601 C 17.998 78.717 18.713 78.002 19.597 78.002 L 29.487 78.002 L 43.722 63.098 C 43.394 62.687 43.199 62.167 43.199 61.601 L 43.199 60.187 C 42.904 59.921 42.673 59.583 42.538 59.201 L 3.199 59.201 C 1.432 59.201 0 57.769 0 56.002 L 0 37.201 C 0 35.433 1.432 34.002 3.199 34.002 L 29.199 34.002 L 29.199 3.999 C 29.199 2.232 30.631 0.8 32.398 0.8 Z"/>;
        viewbox = '-7 -5 113 115';
        break;
      case 'offense':
        path = <path
          d="M 27.559 0.795 L 46.851 18.51 L 56.693 1.583 L 63.778 18.905 L 92.127 0.4 L 79.92 23.237 L 100 22.054 L 85.432 44.495 L 99.605 50.795 L 87.4 60.639 L 98.032 72.054 L 80.71 73.629 L 87.795 99.22 L 60.237 82.293 L 48.82 99.615 L 41.339 85.834 L 16.534 98.827 L 25.985 76.778 L 3.937 77.566 L 20.866 57.488 L 0 44.495 L 16.929 38.59 L 0 17.722 L 30.707 22.841 L 27.954 1.188"/>;
        viewbox = '-6 -4 114 116';
        break;
      case 'potency':
        path = <path
          d="M 83.155 58.743 C 79.37 72.864 67.814 81.72 55.141 83.53 L 55.141 95.077 L 55.082 95.077 L 50.114 100 L 45.145 95.077 L 45.13 95.077 L 45.13 95.061 L 45.109 95.039 L 45.13 95.039 L 45.13 83.477 C 38.425 82.443 31.886 79.343 26.473 73.93 C 21.223 68.68 17.936 61.952 16.905 54.841 L 6.323 54.841 L 6.323 54.78 L 1.4 49.811 L 6.323 44.845 L 6.323 44.83 L 6.339 44.83 L 6.361 44.807 L 6.361 44.83 L 16.945 44.83 C 17.132 43.616 17.384 42.409 17.707 41.207 C 21.425 27.327 32.652 18.536 45.068 16.52 L 45.068 4.923 L 45.127 4.923 L 50.095 0 L 55.064 4.923 L 55.08 4.923 L 55.08 4.939 L 55.1 4.961 L 55.08 4.961 L 55.08 16.377 C 62.011 17.309 68.798 20.432 74.386 26.018 C 79.6 31.232 82.877 37.895 83.936 44.952 L 93.636 44.952 L 93.636 45.014 L 98.559 49.98 L 93.636 54.948 L 93.636 54.964 L 93.62 54.964 L 93.598 54.986 L 93.598 54.964 L 83.941 54.964 C 83.752 56.227 83.491 57.489 83.155 58.743 Z M 42.88 21.791 C 31.123 24.941 23.605 34.345 21.707 44.83 L 23.468 44.83 L 23.468 44.82 L 23.48 44.83 L 23.484 44.83 L 23.484 44.832 L 30.009 49.825 L 23.484 54.82 L 23.484 54.841 L 21.625 54.841 C 22.564 60.509 25.218 66.025 29.798 70.605 C 34.048 74.855 39.416 77.609 45.13 78.666 L 45.13 77.932 L 45.12 77.932 L 45.13 77.92 L 45.13 77.916 L 45.132 77.916 L 50.127 71.391 L 55.12 77.916 L 55.141 77.916 L 55.141 78.77 C 56.093 78.614 57.041 78.409 57.982 78.157 C 69.798 74.991 77.334 65.509 79.182 54.964 L 76.489 54.964 L 76.489 54.973 L 76.477 54.964 L 76.473 54.964 L 76.473 54.961 L 69.95 49.966 L 76.473 44.973 L 76.473 44.952 L 79.211 44.952 C 78.248 39.339 75.602 33.882 71.061 29.343 C 66.65 24.932 61.034 22.132 55.08 21.17 L 55.08 22.068 L 55.086 22.068 L 55.08 22.08 L 55.08 22.084 L 55.077 22.084 L 50.082 28.609 L 45.089 22.084 L 45.068 22.084 L 45.068 21.295 C 44.336 21.432 43.607 21.598 42.88 21.791 Z M 59.757 49.259 C 59.757 54.014 55.42 57.87 50.073 57.87 C 44.725 57.87 40.389 54.014 40.389 49.259 C 40.389 44.505 44.725 40.65 50.073 40.65 C 55.42 40.65 59.757 44.505 59.757 49.259 Z"/>;
        viewbox = '0 0 100 100';
        break;
      case 'speed':
        path = <path
          d="M 29.879 91.867 C 29.48 92.497 28.853 92.896 28.172 93.019 C 27.486 93.378 26.643 93.421 25.888 93.06 L 1.46 81.444 C 0.184 80.834 -0.358 79.308 0.248 78.031 L 2.471 73.356 C 3.078 72.078 4.606 71.535 5.884 72.145 L 24.546 81.019 L 32.701 68.102 L 7.323 65.257 L 34.501 62.213 L 40.794 49.782 L 16.517 46.544 L 44.31 42.839 L 50.908 29.809 L 35.822 24.522 L 29.974 34.648 C 29.268 35.872 27.701 36.292 26.477 35.585 L 24.075 34.198 C 22.851 33.491 22.431 31.924 23.138 30.7 L 24.802 27.82 L 3.774 24.765 L 28.65 21.153 L 30.975 17.128 C 31.426 16.349 32.222 15.896 33.059 15.85 C 33.612 15.632 34.245 15.602 34.849 15.814 L 54.543 22.719 C 54.856 22.83 55.135 22.993 55.373 23.198 C 55.908 23.098 56.482 23.165 57.006 23.431 L 61.492 25.702 L 63.866 21.014 C 61.093 19.007 59.29 15.743 59.29 12.056 C 59.29 10.937 59.457 9.856 59.766 8.84 L 16.921 5.511 L 66.582 1.658 C 67.757 1.233 69.025 1 70.346 1 C 76.452 1 81.401 5.949 81.401 12.056 C 81.401 18.021 76.675 22.883 70.763 23.104 L 68.341 27.886 C 68.359 27.891 68.374 27.899 68.392 27.904 L 84.628 33.596 L 92.821 19.409 C 93.527 18.185 95.094 17.765 96.318 18.472 L 98.72 19.86 C 99.944 20.566 100.363 22.131 99.657 23.357 L 89.221 41.428 C 88.514 42.654 86.947 43.074 85.723 42.365 L 85.613 42.301 C 85.567 42.288 85.521 42.273 85.475 42.258 L 70.789 37.109 L 54.871 68.547 L 92.083 89.058 C 93.322 89.739 93.773 91.299 93.089 92.535 L 90.258 97.674 C 89.933 98.263 89.41 98.675 88.816 98.87 L 88.816 99 L 88.104 98.995 C 88.033 98.998 87.961 98.998 87.892 98.995 L 49.75 98.772 L 76.721 93.134 L 41.806 73.886 C 41.66 73.806 41.527 73.714 41.401 73.612 Z"/>;
        viewbox = '-10 -5 115 120';
        break;
      case 'tenacity':
        path = <path
          d="M 77.952 72.401 C 75.432 75.457 72.399 78.224 69.69 80.941 C 69.83 82.269 69.759 98.496 69.759 98.496 C 69.759 99.326 69.085 100 68.255 100 L 32.869 100 C 32.039 100 31.365 99.326 31.365 98.496 L 30.888 77.116 C 30.888 77.116 13.233 51.471 12.646 50.677 C 12.049 49.87 12.519 48.665 12.646 47.669 C 12.748 46.875 19.473 23.553 19.749 22.667 C 20.03 21.771 21.493 21.365 22.345 21.574 C 23.609 21.885 48.854 33.87 48.854 33.87 C 48.854 33.87 50.314 34.653 50.493 35.373 C 50.692 36.17 50.276 37.143 49.671 37.697 C 48.458 38.807 45.852 39.298 44.207 39.336 C 39.757 39.438 37.312 38.447 37.312 38.447 C 37.312 38.447 33.285 37.745 31.437 36.941 C 30.074 36.349 29.903 34.352 28.567 33.528 C 27.094 32.616 26.093 32.225 24.607 33.116 C 23.637 33.699 22.695 34.567 22.483 35.647 C 22.253 36.818 22.823 38.133 23.576 39.063 C 24.5 40.204 26.785 40.462 28.085 41.521 C 28.35 45.131 24.143 47.301 25.761 49.857 C 29.152 50.728 32.8 45.542 35.601 46.03 C 39.839 46.768 53.087 59.01 53.087 59.01 C 53.087 59.01 53.393 67.019 53.498 67.616 C 53.087 69.22 52.199 70.823 50.902 71.852 C 49.773 72.748 47.95 72.347 46.801 73.218 C 45.441 74.249 44.343 76.233 43.932 77.456 C 48.573 79.044 51.951 75.776 55.954 76.228 C 58.63 76.529 61.083 78.937 63.606 78.822 C 64.783 76.501 64.75 75.204 64.017 73.629 C 63.19 71.852 60.277 71.952 59.235 70.213 C 58.14 66.284 59.784 59.725 59.097 56.002 C 57.718 54.399 55.405 53.421 53.904 51.767 C 53.021 50.794 51.098 49.648 51.719 48.489 C 52.385 47.243 54.581 48.164 55.954 48.489 C 57.144 48.769 58.058 49.793 59.232 50.128 C 63.542 51.356 68.352 49.995 72.623 51.358 C 74.178 51.854 75.289 53.37 76.859 53.817 C 78.437 54.266 80.489 54.971 81.779 53.955 C 82.473 53.408 81.618 51.889 82.325 51.358 C 82.8 51.001 83.719 51.042 84.102 51.496 C 84.947 57.156 84.368 61.149 82.734 65.571 C 81.771 68.178 79.721 70.256 77.952 72.401 Z M 35.136 0.21 L 40.735 1.443 C 41.945 1.987 42.349 3.271 41.808 4.479 L 36.765 16.557 C 36.221 17.767 34.529 18.171 33.319 17.629 L 28.677 14.619 C 27.469 14.076 26.928 12.656 27.469 11.446 L 31.965 1.417 C 32.507 0.21 33.929 -0.332 35.136 0.21 Z M 51.576 5.829 L 57.734 7.772 C 58.617 8.071 58.952 9.983 58.653 10.866 L 53.708 23.622 C 53.409 24.502 51.632 25.25 50.748 24.952 L 46.094 22.733 C 45.211 22.437 44.468 20.66 44.767 19.779 L 49.166 7.295 C 49.464 6.411 50.692 5.53 51.576 5.829 Z M 68.306 14.303 L 74.411 16.455 C 75.475 16.887 75.307 18.781 74.873 19.846 L 65.63 38.815 C 65.199 39.88 63.713 40.666 62.648 40.235 L 59.135 37.401 C 58.071 36.967 57.287 34.526 57.718 33.461 L 65.184 15.722 C 65.615 14.658 67.241 13.871 68.306 14.303 Z M 83.341 22.93 L 86.558 24.283 C 87.482 24.65 87.937 26.106 87.569 27.032 L 80.691 43.571 C 80.323 44.496 79.277 45.359 78.35 44.991 L 74.86 43.638 C 73.936 43.27 73.481 42.088 73.849 41.161 L 80.865 24.352 C 81.232 23.425 82.414 22.562 83.341 22.93 Z"/>;
        viewbox = '-6 -5 114 115';
        break;
      default:
        throw new Error(`Unknown mod set type: ${set.toLowerCase()}`);
    }

    return <svg viewBox={viewbox} className={`modset ${set.toLowerCase()}`}
                xmlns="http://www.w3.org/2000/svg">
      {path}
    </svg>;

  }

  modHighlight(slot) {
    let path;
    switch (slot.toLowerCase()) {
      case 'square':
        path = [
          <path key={'outer'} className={'outer'}
                d="M 64.199 122.567 L 29.633 122.567 L 11.825 104.759 L 11.825 69.714 L 12.624 68.915 L 23.323 78.655 L 25.921 76.057 L 11.825 61.96 L 11.932 51.518 L 13.821 49.966 L 18.102 48.472 L 11.825 48.579 C 10.766 48.579 9.907 47.72 9.907 46.661 L 9.907 43.626 C 9.907 42.567 10.766 41.708 11.825 41.708 L 17.995 41.655 C 18.576 41.655 18.453 38.408 18.209 38.408 L 11.397 38.14 C 10.514 38.14 9.853 37.318 9.853 36.435 L 9.853 33.238 C 9.853 32.355 10.782 31.64 11.665 31.64 L 17.942 31.534 C 18.644 31.674 18.667 27.739 17.942 27.594 L 11.666 27.487 C 10.607 27.487 9.748 26.628 9.748 25.569 L 9.748 22.693 C 9.748 21.634 10.607 20.775 11.666 20.775 L 17.889 20.776 L 13.287 19.439 L 12.147 18.048 C 12.147 16.759 11.985 6.392 11.985 6.392 L 13.103 4.954 L 128.479 4.794 L 129.598 6.073 L 129.598 121.129 L 128 122.727 L 72.111 122.567 L 57.936 108.391 L 55.337 110.99 L 65.157 121.608 L 64.199 122.567 Z"/>,
          <path key={'inner'} className={'inner'}
                d="M 49.538 20.614 L 113.938 20.614 L 113.938 84.374 L 57.527 84.374 L 49.698 75.906 L 49.698 47.461 L 54.013 44.105 L 54.012 27.646 L 49.538 24.609 L 49.538 20.614 Z"/>
        ];
        break;
      case 'arrow':
        path = [
          <path key={'outer'} className={'outer'}
                d="M 73.666 119.845 L 73.626 118.134 L 72.754 117.511 L 70.935 117.511 L 70.219 118.165 L 70.211 119.478 L 69.121 120.536 L 65.345 120.537 L 64.286 119.665 L 64.29 116.117 L 63.169 115.245 L 61.964 115.245 L 60.874 116.117 L 60.873 118.812 L 59.783 120.556 L 55.578 120.556 L 54.581 119.652 L 54.586 114.766 L 52.848 113.821 L 52.87 106.131 C 33.538 114.425 16.191 96.758 26.755 77.951 L 9.908 60.404 L 47.461 22.531 L 32.759 7.829 L 33.558 5.432 L 125.923 5.593 L 126.882 6.712 L 126.882 97.959 L 125.124 98.598 L 111.425 84.419 L 79.285 116.528 L 79.313 119.606 L 78.354 120.56 L 74.569 120.561 L 73.666 119.845 Z"/>,
          <path key={'inner'} className={'inner'}
                d="M 62.37 19.904 L 112.264 19.904 L 112.709 69.798 L 106.324 62.522 L 103.651 62.522 L 87.911 77.685 L 74.389 77.466 L 47.372 50.197 L 70.24 27.774 L 62.37 19.904 Z"/>
        ];
        break;
      case 'diamond':
        path = [
          <path key={'outer'} className={'outer'}
                d="M 12.464 76.913 L 12.144 52.048 L 58.439 5.753 L 81.865 5.593 L 128.319 53.007 L 128.48 75.795 L 112.819 91.615 L 114.896 107.546 L 112.659 109.144 L 112.499 116.814 C 112.499 117.52 111.927 119.21 111.221 119.21 L 108.504 119.21 C 107.798 119.21 106.746 117.84 106.746 117.134 L 106.746 109.143 L 103.231 108.824 L 103.231 116.814 C 103.231 117.344 102.163 119.051 101.633 119.051 L 98.917 119.052 C 98.387 119.052 97.798 117.824 97.798 117.294 L 97.798 110.262 L 96.888 108.984 L 95.72 110.312 L 95.081 117.293 C 95.081 117.911 93.941 119.211 93.323 119.211 L 90.767 118.891 C 90.149 118.891 89.328 118.071 89.328 117.453 L 89.328 115.425 L 81.867 122.886 L 57.638 122.567 L 12.464 76.913 Z"/>,
          <path key={'inner'} className={'inner'}
                d="M 63.442 29.403 L 76.863 29.403 L 104.51 57.05 L 104.67 70.793 L 76.706 98.756 L 62.321 98.437 L 35.795 71.911 L 35.955 56.731 L 63.442 29.403 Z"/>
        ];
        break;
      case 'triangle':
        path = [
          <path key={'outer'} className={'outer'}
                d="M 79.559 10.068 L 119.165 77.983 C 119.18 77.983 119.196 77.983 119.211 77.983 L 132.474 78.143 C 133.886 78.143 134.871 79.128 134.871 80.54 L 134.871 83.096 C 134.871 84.508 134.206 85.014 132.794 85.014 L 123.837 85.174 L 125.754 89.008 L 132.954 89.008 C 134.189 89.008 135.191 90.01 135.191 91.245 L 135.191 93.483 C 135.191 94.718 134.189 95.72 132.954 95.72 L 130.467 96.2 L 131.692 98.117 L 133.113 98.916 C 134.172 98.916 135.031 99.935 135.031 100.994 L 135.031 103.39 C 135.031 104.449 134.172 104.828 133.113 104.828 L 130.73 106.266 L 123.699 117.614 L 13.077 117.294 L 4.314 100.784 L 58.477 9.908 L 79.559 10.068 Z"/>,
          <path key={'inner'} className={'inner'}
                d="M 74.394 36.834 L 106.267 90.531 L 102.022 98.357 L 36.514 98.677 L 32.28 90.929 L 64.49 36.994 L 74.394 36.834 Z"/>
        ];
        break;
      case 'circle':
        path = [
          <path key={'outer'} className={'outer'}
                d="M 128.665 64.559 C 128.665 93.439 106.406 116.62 80.772 122.249 C 80.391 123.006 77.53 123.047 76.624 123.047 L 63.999 122.887 C 63.093 122.887 60.711 122.526 60.33 121.769 C 32.779 117.099 11.959 93.439 11.959 64.559 C 11.959 57.785 12.314 53.199 14.437 47.151 C 14.204 46.895 14.541 45.117 14.541 44.744 L 14.701 42.826 C 14.701 42.032 15.026 41.069 15.82 41.069 L 17.75 39.79 C 18.428 38.263 17.411 39.327 18.213 37.872 L 15.82 37.073 C 15.026 37.073 14.542 35.95 14.542 35.156 L 14.702 33.078 C 14.702 32.284 15.825 31.48 16.619 31.48 L 21.804 31.161 C 22.785 29.729 23.028 29.62 24.129 28.284 L 16.459 28.124 C 15.665 28.124 14.542 27.001 14.542 26.207 L 14.542 24.129 C 14.542 23.335 15.825 22.371 16.619 22.371 L 29.511 22.371 C 40.004 12.262 54.272 6.206 69.992 6.206 C 79.125 6.206 88.088 8.304 95.786 12.045 C 98.229 10.463 101.142 9.544 104.269 9.544 C 112.898 9.544 119.893 16.539 119.893 25.168 C 119.893 27.475 119.393 29.664 118.496 31.635 C 124.912 41.006 128.665 52.344 128.665 64.559 Z"/>,
          <path key={'inner'} className={'inner'}
                d="M 101.66 65.997 A 31.347 31.347 0 0 1 70.313 97.344 A 31.347 31.347 0 0 1 38.966 65.997 A 31.347 31.347 0 0 1 70.313 34.65 A 31.347 31.347 0 0 1 101.66 65.997 Z"/>
        ];
        break;
      case 'cross':
        path = [
          <path key={'outer'} className={'outer'}
                d="M 39.31 33.559 L 40.269 7.511 C 40.269 6.276 41.271 5.594 42.506 5.594 L 98.276 5.753 C 99.511 5.753 100.993 7.075 100.993 8.31 L 101.313 34.038 L 103.39 36.435 L 124.645 37.234 C 125.792 37.234 126.722 38.164 126.722 39.311 L 126.722 89.809 C 126.722 90.956 125.473 92.684 124.326 92.684 L 103.709 93.483 L 101.792 95.56 L 101.152 120.01 C 101.152 121.245 100.15 122.247 98.915 122.247 L 41.707 122.087 C 40.472 122.087 38.991 120.766 38.991 119.531 L 38.831 112.819 L 36.434 112.02 C 35.64 112.02 35.156 110.417 35.156 109.623 L 35.316 93.643 L 31.321 93.644 L 31.161 110.262 C 31.161 110.615 30.395 112.18 30.042 112.18 L 27.166 112.02 C 26.813 112.02 25.887 111.095 25.887 110.742 L 25.887 93.324 L 22.213 93.324 L 22.053 110.742 C 22.053 111.183 21.216 112.5 20.775 112.5 L 18.058 112.34 C 17.617 112.34 15.98 111.023 15.98 110.582 C 15.98 110.58 16.14 93.32 16.14 93.318 C 15.068 93.236 13.424 92.02 13.424 90.927 L 14.063 38.672 C 14.063 37.525 15.632 36.755 16.779 36.755 L 37.073 36.115 L 39.31 33.559 Z"/>,
          <path key={'inner'} className={'inner'}
                d="M 53.214 47.301 L 53.853 33.239 C 53.853 31.827 54.678 30.682 56.09 30.682 L 84.694 30.842 C 86.106 30.842 86.931 31.347 86.931 32.759 L 87.091 47.141 L 89.008 49.059 L 100.834 49.538 C 102.422 49.538 102.912 50.347 102.912 51.935 L 102.912 78.143 C 102.912 79.731 102.423 79.74 100.835 79.74 L 89.968 80.06 L 87.411 82.297 L 87.251 96.2 C 87.251 97.612 85.946 97.798 84.534 97.798 L 56.09 97.958 C 54.678 97.958 53.533 97.293 53.533 95.881 L 52.894 83.096 L 50.817 80.699 L 39.79 80.22 C 38.202 80.22 37.713 79.89 37.713 78.302 L 37.873 51.136 C 37.873 49.548 38.682 49.858 40.27 49.858 L 50.976 49.539 L 53.214 47.301 Z"/>
        ];
        break;
      default:
        path = [];
    }

    return <svg className={`mod-highlight ${slot.toLowerCase()}`}
                viewBox="0 0 140 128" xmlns="http://www.w3.org/2000/svg">
      {path}
    </svg>
  }

}

export default ModImage;
